name: Movies Project Master

on:
  pull_request:
  #push:
  #  branches:
  #    - master

concurrency: ${{ github.ref_name }}

env:
  ARTIFACTORY_CONTEXT: https://artifactory.mpi-internal.com/artifactory
  ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
  ARTIFACTORY_PWD: ${{ secrets.ARTIFACTORY_PWD }}

  APPLICATION_NAME: "pet-movies" 
  CDN_PRE: "https://scm-milanuncios-frontend-pre.milanuncios.net/pet-movies/development/"
  CDN_PRO: "https://scm-milanuncios-frontend-pre.milanuncios.net/pet-movies/production/"
  # MA AWS Pre Account ID
  AWS_ACCOUNT_ID_PRE: '060140816915'
  AWS_ACCOUNT_ID_PRO: '060140816915'
  S3_BUCKET_APPLICATION_PRE: "s3://scm-milanuncios-frontend-pre/pet-movies/development"
  S3_BUCKET_APPLICATION_PRO: "s3://scm-milanuncios-frontend-pre/pet-movies/production"
  BOUNDED_CONTEXT: "es-microtest"

jobs:
  compute:
    name: 🖥️ Compute
    runs-on: small
    outputs:
      APPLICATION_NAME: ${{ env.APPLICATION_NAME }}
      CDN_PRE: ${{ env.CDN_PRE }}
      CDN_PRO: ${{ env.CDN_PRO }}
      AWS_ACCOUNT_ID_PRE: ${{ env.AWS_ACCOUNT_ID_PRE }}
      AWS_ACCOUNT_ID_PRO: ${{ env.AWS_ACCOUNT_ID_PRO }}
      S3_BUCKET_APPLICATION_PRE: ${{ env.S3_BUCKET_APPLICATION_PRE }}
      S3_BUCKET_APPLICATION_PRO: ${{ env.S3_BUCKET_APPLICATION_PRO }}
      BOUNDED_CONTEXT: ${{ env.BOUNDED_CONTEXT }}
    steps:
      - name: Compute outputs
        run: |
          echo "APPLICATION_NAME=${{ env.APPLICATION_NAME }}" >> $GITHUB_OUTPUT
          echo "CDN_PRE=${{ env.CDN_PRE }}" >> $GITHUB_OUTPUT
          echo "CDN_PRO=${{ env.CDN_PRO }}" >> $GITHUB_OUTPUT
          echo "AWS_ACCOUNT_ID_PRE=${{ env.AWS_ACCOUNT_ID_PRE }}" >> $GITHUB_OUTPUT
          echo "AWS_ACCOUNT_ID_PRO=${{ env.AWS_ACCOUNT_ID_PRO }}" >> $GITHUB_OUTPUT
          echo "S3_BUCKET_APPLICATION_PRE=${{ env.S3_BUCKET_APPLICATION_PRE }}" >> $GITHUB_OUTPUT
          echo "S3_BUCKET_APPLICATION_PRO=${{ env.S3_BUCKET_APPLICATION_PRO }}" >> $GITHUB_OUTPUT
          echo "BOUNDED_CONTEXT=${{ env.BOUNDED_CONTEXT }}" >> $GITHUB_OUTPUT

  build-app:
    name: 🔨 Build App
    runs-on: big
    needs: compute
    strategy:
      matrix:
        include:
          - stage: development
            CDN: ${{ needs.compute.outputs.CDN_PRE }}
          - stage: production
            CDN: ${{ needs.compute.outputs.CDN_PRO }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/build-app
        with:
          stage: ${{ matrix.stage }}
          cdn: ${{ matrix.CDN }}

  lint:
    name: 🤖 Lint
    runs-on: medium
    needs: compute
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/composite/lint

  test: 
    name: 🧪 Testing 
    runs-on: big
    needs: compute
    strategy:
      matrix:
        stage: ['development', 'production']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/test
        with:
          stage: ${{ matrix.stage }}

  dockerize:
    name: 📦 Dockerize
    runs-on: medium
    needs: 
      - compute
      - build-app
    strategy:
      matrix:
        stage: ['development', 'production']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/dockerize
        with:
          stage: ${{ matrix.stage }}
          suffix: '${{ needs.compute.outputs.APPLICATION_NAME }}-${{ matrix.stage }}'
  cdn:
    name: 📡 Upload CDN
    runs-on: medium
    needs: 
      - compute
      - build-app
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - stage: 'development'
            aws-account-id: "${{ needs.compute.outputs.AWS_ACCOUNT_ID_PRE }}"
            s3-bucket: ${{ needs.compute.outputs.S3_BUCKET_APPLICATION_PRE }}
          - stage: 'production'
            aws-account-id: "${{ needs.compute.outputs.AWS_ACCOUNT_ID_PRO }}"
            s3-bucket: ${{ needs.compute.outputs.S3_BUCKET_APPLICATION_PRO }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/cdn
        with:
          s3-bucket: ${{ matrix.s3-bucket }}
          aws-account-id: "${{ matrix.aws-account-id }}"
          aws-region: 'eu-west-3'
          stage: ${{ matrix.stage }}

  e2e:
    name: 🎭 Tests E2E
    runs-on: big
    needs: 
      - compute
      - dockerize
      - cdn
    strategy:
      matrix:
        scope: ['integration/home', 'integration/detail']
        stage: ['development', 'production']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/e2e
        with:
          scope: ${{ matrix.scope }}
          stage: ${{ matrix.stage }}
          application-image: "containers.mpi-internal.com/${{ github.repository }}-${{ needs.compute.outputs.APPLICATION_NAME }}-${{ matrix.stage }}:${{ github.sha }}"

  validate-and-publish:
    name: 🎯 Validate and Publish
    needs:
      - compute
      - dockerize
      - cdn
    strategy:
      matrix:
        include:
          - environment: 'pre'
            stage: 'development'
          - environment: 'pro'
            stage: 'production'
    uses: scmspain/platform-common--actions/.github/workflows/validate-and-publish.yml@v0
    with:
      environments: ${{ matrix.environment }}
      image-tag: containers.mpi-internal.com/${{ github.repository }}-${{ needs.compute.outputs.APPLICATION_NAME }}-${{ matrix.stage }}:${{ github.sha }}
      application-name: ms-${{ needs.compute.outputs.APPLICATION_NAME }}--sandbox
      bounded-context: ${{ needs.compute.outputs.BOUNDED_CONTEXT }}
    secrets:
      artifactory-user: ${{ secrets.ARTIFACTORY_USER }}
      artifactory-pwd: ${{ secrets.ARTIFACTORY_PWD }}

  deploy:
    name: 🚀 Deploy
    needs:
      - compute
      - lint
      - test
      - e2e
      - validate-and-publish
    permissions:
      id-token: write
      contents: read
    uses: scmspain/platform-common--actions/.github/workflows/deploy.yml@v0
    with:
      environment: pre
      manifests-path: ${{ needs.validate-and-publish.outputs.manifests-path }}
      bounded-context: ${{ needs.compute.outputs.BOUNDED_CONTEXT }}
    secrets:
      artifactory-user: ${{ secrets.ARTIFACTORY_USER }}
      artifactory-pwd: ${{ secrets.ARTIFACTORY_PWD }}

  notify:
    runs-on: small
    if: always()
    needs:
      - deploy
    steps:
      - name: Notify
        uses: scmspain/platform-common--actions/workflow-status-notification@v0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          notify-on: always
          slack-channel-id: C0662FGBDGB
