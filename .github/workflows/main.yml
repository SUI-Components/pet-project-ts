name: Movies Project Master

on:
  push:
    branches:
      - master

concurrency: ${{ github.ref_name }}

env:
  ARTIFACTORY_CONTEXT: https://artifactory.mpi-internal.com/artifactory
  ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
  ARTIFACTORY_PWD: ${{ secrets.ARTIFACTORY_PWD }}
  ##################################################################################
  ## ⚠️  Update jobs.validate-and-publish.with.[image-tag|application-name] too ⚠️  ##
  ##################################################################################
  APPLICATION_NAME: "pet-movies" 
  CDN_PRE: "https://scm-milanuncios-frontend-pre.milanuncios.net/pet-movies/development/"
  CDN_PRO: "https://scm-milanuncios-frontend-pre.milanuncios.net/pet-movies/production/"
  # MA AWS Pre Account ID
  AWS_ACCOUNT_ID_PRE: '060140816915'
  AWS_ACCOUNT_ID_PRO: '060140816915'
  S3_BUCKET_APPLICATION_PRE: "s3://scm-milanuncios-frontend-pre/pet-movies/development"
  S3_BUCKET_APPLICATION_PRO: "s3://scm-milanuncios-frontend-pre/pet-movies/production"

jobs:
  compute:
    runs-on: small
    outputs:
      APPLICATION_NAME: ${{ env.APPLICATION_NAME }}
      CDN_PRE: ${{ env.CDN_PRE }}
      CDN_PRO: ${{ env.CDN_PRO }}
      AWS_ACCOUNT_ID_PRE: ${{ env.AWS_ACCOUNT_ID_PRE }}
      AWS_ACCOUNT_ID_PRO: ${{ env.AWS_ACCOUNT_ID_PRO }}
      S3_BUCKET_APPLICATION_PRE: ${{ env.S3_BUCKET_APPLICATION_PRE }}
      S3_BUCKET_APPLICATION_PRO: ${{ env.S3_BUCKET_APPLICATION_PRO }}
    steps:
      - name: Compute outputs
        run: |
          echo "APPLICATION_NAME=${{ env.APPLICATION_NAME }}" >> $GITHUB_OUTPUT
          echo "CDN_PRE=${{ env.CDN_PRE }}" >> $GITHUB_OUTPUT
          echo "CDN_PRO=${{ env.CDN_PRO }}" >> $GITHUB_OUTPUT
          echo "AWS_ACCOUNT_ID_PRE=${{ env.AWS_ACCOUNT_ID_PRE }}" >> $GITHUB_OUTPUT
          echo "AWS_ACCOUNT_ID_PRO=${{ env.AWS_ACCOUNT_ID_PRO }}" >> $GITHUB_OUTPUT
          echo "S3_BUCKET_APPLICATION_PRE=${{ env.S3_BUCKET_APPLICATION_PRE }}" >> $GITHUB_OUTPUT
          echo "S3_BUCKET_APPLICATION_PRO=${{ env.S3_BUCKET_APPLICATION_PRO }}" >> $GITHUB_OUTPUT

  lint-and-test:
    runs-on: big
    strategy:
      matrix:
        stage: ['development', 'production']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: action
        uses: ./.github/composite/lint-and-test
        with:
          stage: ${{ matrix.stage }}

  build-image:
    runs-on: medium
    needs: compute
    strategy:
      matrix:
        include:
          - stage: development
            CDN: ${{ needs.compute.outputs.CDN_PRE }}
          - stage: production
            CDN: ${{ needs.compute.outputs.CDN_PRO }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build docker image
        uses: common-platform/actions/build-image@v0
        with:
          dockerfile-path: ./.docker/Dockerfile
          push-image: true
          additional-tags: '["${{ github.sha }}"]'
          build-args: '{"STAGE": "${{ matrix.stage }}", "CDN": "${{ matrix.CDN }}"}'
          suffix: '${{ needs.compute.outputs.APPLICATION_NAME }}-${{ matrix.stage }}'

  cdn:
    runs-on: medium
    needs:
      - compute
      - build-image
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - stage: 'development'
            aws-account-id: "${{ needs.compute.outputs.AWS_ACCOUNT_ID_PRE }}"
            s3-bucket-application: ${{ needs.compute.outputs.S3_BUCKET_APPLICATION_PRE }}
          - stage: 'production'
            aws-account-id: "${{ needs.compute.outputs.AWS_ACCOUNT_ID_PRO }}"
            s3-bucket-application: ${{ needs.compute.outputs.S3_BUCKET_APPLICATION_PRO }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: action
        uses: ./.github/composite/cdn
        with:
          aws-account-id: ${{ matrix.aws-account-id }}
          stage: ${{ matrix.stage }}
          docker-image: containers.mpi-internal.com/${{ github.repository }}-${{ needs.compute.outputs.APPLICATION_NAME }}-${{ matrix.stage }}:${{ github.sha }}
        env:
          # This env var is used in app/Makefile file.
          S3_BUCKET_APPLICATION: ${{ matrix.s3-bucket-application }}


  e2e:
    runs-on: big
    needs: 
      - compute
      - build-image
      - cdn
    strategy:
      matrix:
        stage: ['development', 'production']
        scope: ['integration/home', 'integration/detail']
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: action
        uses: ./.github/composite/e2e
        with:
          scope: ${{ matrix.scope }}
          stage: ${{ matrix.stage }}
          docker-image: containers.mpi-internal.com/${{ github.repository }}-${{ needs.compute.outputs.APPLICATION_NAME }}-${{ matrix.stage }}:${{ github.sha }}

  validate-and-publish:
    needs:
      - compute
      - build-image
    strategy:
      matrix:
        include:
          - environment: 'pre'
            stage: 'development'
          - environment: 'pro'
            stage: 'production'
    uses: scmspain/platform-common--actions/.github/workflows/validate-and-publish.yml@v0
    with:
      environments: ${{ matrix.environment }}
      image-tag: containers.mpi-internal.com/${{ github.repository }}-${{ needs.compute.outputs.APPLICATION_NAME }}-${{ matrix.stage }}:${{ github.sha }}
      application-name: ms-${{ needs.compute.outputs.APPLICATION_NAME }}--sandbox
      bounded-context: es-microtest
    secrets:
      artifactory-user: ${{ secrets.ARTIFACTORY_USER }}
      artifactory-pwd: ${{ secrets.ARTIFACTORY_PWD }}

  deploy:
    needs: 
      - validate-and-publish
      - lint-and-test
      - e2e
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        environment: ['pre', 'pro']
    uses: scmspain/platform-common--actions/.github/workflows/deploy.yml@v0
    with:
      environment: ${{ matrix.environment }}
      manifests-path: ${{ needs.validate-and-publish.outputs.manifests-path }}
      bounded-context: es-microtest
    secrets:
      artifactory-user: ${{ secrets.ARTIFACTORY_USER }}
      artifactory-pwd: ${{ secrets.ARTIFACTORY_PWD }}

  notify:
    runs-on: small
    if: always()
    needs:
      - deploy
    steps:
      - name: Notify
        uses: scmspain/platform-common--actions/workflow-status-notification@v0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          notify-on: always
          slack-channel-id: C0662FGBDGB
