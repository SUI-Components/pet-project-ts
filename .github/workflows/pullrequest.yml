name: Movies Project Pull Request

on:
  workflow_dispatch:
  pull_request:

concurrency: ${{ github.ref_name }}

env:
  ARTIFACTORY_CONTEXT: https://artifactory.mpi-internal.com/artifactory
  ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
  ARTIFACTORY_PWD: ${{ secrets.ARTIFACTORY_PWD }}
  ARTIFACTORY_NPM_SECRET: ${{ secrets.ARTIFACTORY_NPM_SECRET }}
  ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  GITHUB_TOKEN: ${{ github.token }}

  APPLICATION_NAME: "pet-movies" 

  CDN: "https://scm-milanuncios-frontend-pre.milanuncios.net/pet-movies/development/"
  AWS_ACCOUNT_ID_PRE: '060140816915'
  AWS_REGION_PRE: 'eu-west-3'
  S3_BUCKET_APPLICATION: "s3://scm-milanuncios-frontend-pre/pet-movies/development"

  WIDGETS_CDN: "https://scm-milanuncios-frontend-pre.milanuncios.net/pet-movies/widgets/development/"
  WIDGETS_AWS_ACCOUNT_ID_PRE: '060140816915'
  WIDGETS_AWS_REGION_PRE: 'eu-west-3'
  WIDGETS_S3_BUCKET_APPLICATION: "s3://scm-milanuncios-frontend-pre/pet-movies/widgets/development"

  RESOURCES_CDN: "https://scm-milanuncios-frontend-pre.milanuncios.net/pet-movies/resources/development/"
  RESOURCES_AWS_ACCOUNT_ID_PRE: '060140816915'
  RESOURCES_AWS_REGION_PRE: 'eu-west-3'
  RESOURCES_S3_BUCKET_APPLICATION: "s3://scm-milanuncios-frontend-pre/pet-movies/resources/development"

  BOUNDED_CONTEXT: "es-microtest"

jobs:
  compute:
    name: 🖥️ Compute
    runs-on: small
    outputs:
      APPLICATION_NAME: ${{ env.APPLICATION_NAME }}

      CDN: ${{ env.CDN }}
      AWS_ACCOUNT_ID_PRE: ${{ env.AWS_ACCOUNT_ID_PRE }}
      AWS_REGION_PRE: ${{ env.AWS_REGION_PRE }}
      S3_BUCKET_APPLICATION: ${{ env.S3_BUCKET_APPLICATION }}

      WIDGETS_CDN: ${{ env.WIDGETS_CDN }}
      WIDGETS_AWS_ACCOUNT_ID_PRE: ${{ env.WIDGETS_AWS_ACCOUNT_ID_PRE }}
      WIDGETS_AWS_REGION_PRE: ${{ env.WIDGETS_AWS_REGION_PRE }}
      WIDGETS_S3_BUCKET_APPLICATION: ${{ env.WIDGETS_S3_BUCKET_APPLICATION }}

      RESOURCES_CDN: ${{ env.RESOURCES_CDN }}
      RESOURCES_AWS_ACCOUNT_ID_PRE: ${{ env.RESOURCES_AWS_ACCOUNT_ID_PRE }}
      RESOURCES_AWS_REGION_PRE: ${{ env.RESOURCES_AWS_REGION_PRE }}
      RESOURCES_S3_BUCKET_APPLICATION: ${{ env.RESOURCES_S3_BUCKET_APPLICATION }}

      BOUNDED_CONTEXT: ${{ env.BOUNDED_CONTEXT }}
    steps:
      - name: Compute outputs
        run: |
          echo "APPLICATION_NAME=${{ env.APPLICATION_NAME }}" >> $GITHUB_OUTPUT

          echo "CDN=${{ env.CDN }}" >> $GITHUB_OUTPUT
          echo "AWS_ACCOUNT_ID_PRE=${{ env.AWS_ACCOUNT_ID_PRE }}" >> $GITHUB_OUTPUT
          echo "AWS_REGION_PRE=${{ env.AWS_REGION_PRE }}" >> $GITHUB_OUTPUT
          echo "S3_BUCKET_APPLICATION=${{ env.S3_BUCKET_APPLICATION }}" >> $GITHUB_OUTPUT

          echo "WIDGETS_CDN=${{ env.WIDGETS_CDN }}" >> GITHUB_OUTPUT
          echo "WIDGETS_AWS_ACCOUNT_ID_PRE=${{ env.WIDGETS_AWS_ACCOUNT_ID_PRE }}" >> GITHUB_OUTPUT
          echo "WIDGETS_AWS_REGION_PRE=${{ env.WIDGETS_AWS_REGION_PRE }}" >> $GITHUB_OUTPUT
          echo "WIDGETS_S3_BUCKET_APPLICATION=${{ env.WIDGETS_S3_BUCKET_APPLICATION }}" >> GITHUB_OUTPUT

          echo "RESOURCES_CDN=${{ env.RESOURCES_CDN }}" >> GITHUB_OUTPUT
          echo "RESOURCES_AWS_ACCOUNT_ID_PRE=${{ env.RESOURCES_AWS_ACCOUNT_ID_PRE }}" >> GITHUB_OUTPUT
          echo "RESOURCES_AWS_REGION_PRE=${{ env.RESOURCES_AWS_REGION_PRE }}" >> $GITHUB_OUTPUT
          echo "RESOURCES_S3_BUCKET_APPLICATION=${{ env.RESOURCES_S3_BUCKET_APPLICATION }}" >> GITHUB_OUTPUT

          echo "BOUNDED_CONTEXT=${{ env.BOUNDED_CONTEXT }}" >> $GITHUB_OUTPUT

  build-app:
    name: 🔨 Build App
    runs-on: big
    needs: compute
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/build-app
        with:
          stage: development
          cdn: ${{ needs.compute.outputs.CDN }}
          widgets-cdn: ${{ needs.compute.outputs.WIDGETS_CDN }}

  resources:
    name: 📡 Upload resources
    runs-on: medium
    needs: compute
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/resources
        with:
          s3-bucket: ${{ needs.compute.outputs.RESOURCES_S3_BUCKET_APPLICATION }}
          aws-account-id: ${{ needs.compute.outputs.RESOURCES_AWS_ACCOUNT_ID_PRE }}
          aws-region: ${{ needs.compute.outputs.RESOURCES_AWS_REGION_PRE }}
          stage: development

  lint:
    name: 🤖 Lint
    runs-on: medium
    needs: compute
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/composite/lint

  test-domain-docker:
    if: false
    name: 🧪 Tests Domain Dockerize
    runs-on: big
    needs: compute
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/test-domain-dockerize
        with:
          stage: development

  test-domain: 
    name: 🧪 Tests Domain
    needs: compute
    runs-on: big
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/test-domain
        with:
          stage: development

  dockerize:
    name: 📦 Dockerize
    runs-on: medium
    needs:
      - compute
      - build-app
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/dockerize
        with:
          stage: development
          suffix: '${{ needs.compute.outputs.APPLICATION_NAME }}-development'
          cdn: '${{ needs.compute.outputs.CDN }}'

  widgets:
    name: 📡 Upload Widgets
    runs-on: medium
    needs: 
      - compute
      - build-app
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/widgets
        with:
          s3-bucket: ${{ needs.compute.outputs.WIDGETS_S3_BUCKET_APPLICATION }}
          aws-account-id: ${{ needs.compute.outputs.WIDGETS_AWS_ACCOUNT_ID_PRE }}
          aws-region: ${{ needs.compute.outputs.WIDGETS_AWS_REGION_PRE }}
          stage: development

  cdn:
    name: 📡 Upload CDN
    runs-on: medium
    needs: 
      - compute
      - build-app
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/cdn
        with:
          s3-bucket: ${{ needs.compute.outputs.S3_BUCKET_APPLICATION }}
          aws-account-id: ${{ needs.compute.outputs.AWS_ACCOUNT_ID_PRE }}
          aws-region: ${{ needs.compute.outputs.AWS_REGION_PRE }}
          stage: development

  test-ui-docker:
    if: false
    name: 🧪 Tests UI Dockerize
    runs-on: big
    needs:
      - compute
      - build-app
    strategy:
      matrix:
        pattern: ['layout/header/test', 'layout/footer/test']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/test-ui-dockerize
        with:
          pattern: ${{ matrix.pattern }}
          stage: development

  test-ui:
    name: 🧪 Tests UI
    runs-on: big
    needs:
      - compute
      - build-app
    strategy:
      matrix:
        pattern: ['layout/header/test', 'layout/footer/test']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/test-ui
        with:
          pattern: ${{ matrix.pattern }}
          stage: development

  e2e:
    name: 🎭 Tests E2E
    runs-on: big
    needs: 
      - compute
      - dockerize
      - cdn
    strategy:
      matrix:
        scope: ['integration/home', 'integration/detail']
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/e2e
        with:
          scope: ${{ matrix.scope }}
          application-image: "containers.mpi-internal.com/${{ github.repository }}-${{ needs.compute.outputs.APPLICATION_NAME }}-development:${{ github.sha }}"

  critical-css:
    name: 🔮 Critical CSS
    runs-on: big
    needs:
      - compute
      - dockerize
      - cdn
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/composite/critical-css
        with:
          application-image: "containers.mpi-internal.com/${{ github.repository }}-${{ needs.compute.outputs.APPLICATION_NAME }}-development:${{ github.sha }}"
      - uses: ./.github/composite/dockerize
        with:
          stage: development
          suffix: '${{ needs.compute.outputs.APPLICATION_NAME }}-development-with-critical-css'
          cdn: '${{ needs.compute.outputs.CDN }}'

  validate-and-publish:
    name: 🎯 Validate and Publish
    needs:
      - compute
      - critical-css
    uses: scmspain/platform-common--actions/.github/workflows/validate-and-publish.yml@v0
    with:
      environments: pr
      image-tag: containers.mpi-internal.com/${{ github.repository }}-${{ needs.compute.outputs.APPLICATION_NAME }}-development-with-critical-css:${{ github.sha }}
      application-name: ms-${{ needs.compute.outputs.APPLICATION_NAME }}--sandbox-pr-${{ github.event.number }}
      bounded-context: ${{ needs.compute.outputs.BOUNDED_CONTEXT }}
    secrets:
      artifactory-user: ${{ secrets.ARTIFACTORY_USER }}
      artifactory-pwd: ${{ secrets.ARTIFACTORY_PWD }}

  deploy:
    name: 🚀 Deploy
    needs:
      - compute
      - lint
      - test-ui
      - test-domain
      - e2e
      - validate-and-publish
    permissions:
      id-token: write
      contents: read
    uses: scmspain/platform-common--actions/.github/workflows/deploy.yml@v0
    with:
      environment: pre
      manifests-path: ${{ needs.validate-and-publish.outputs.manifests-path }}
      bounded-context: ${{ needs.compute.outputs.BOUNDED_CONTEXT }}
    secrets:
      artifactory-user: ${{ secrets.ARTIFACTORY_USER }}
      artifactory-pwd: ${{ secrets.ARTIFACTORY_PWD }}

  lhci:
    name: 🚦Lighthouse
    runs-on: big
    # needs:
    #   - deploy
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.14.x
          lhci autorun --verbose
        env:
          URL_APP: https://ms-${{ needs.compute.outputs.APPLICATION_NAME }}--sandbox-pr-${{ github.event.number }}.es-microtest-pre.schip.io

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lhci report
          path: ./.lighthouseci
          retention-days: 30


  comment-pr:
    name: 📄 Comment PR
    runs-on: medium
    needs:
      - compute
      - deploy
    steps:
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: https://ms-${{ needs.compute.outputs.APPLICATION_NAME }}--sandbox-pr-${{ github.event.number }}.es-microtest-pre.schip.io
